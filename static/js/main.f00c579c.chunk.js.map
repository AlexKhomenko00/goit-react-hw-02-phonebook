{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/Section/Section.module.css","components/ContactList/ContactList.module.css","components/Section/fade.module.css","components/ContactList/fade.module.css","components/Filter/Filter.module.css","components/Filter/fadeFilter.module.css","css/button.module.css","css/inpute.module.css","redux/phonebook/phonebookTypes.js","redux/phonebook/phonebookActions.js","components/Alert/Alert.js","redux/phonebook/phonebookReducers.js","redux/store.js","components/Section/Section.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js"],"names":["module","exports","addContact","createAction","phonebookTypes","name","number","payload","contact","id","uuidv4","updateFromLocaleStorage","removeContact","changeFilter","Alert","NotificationManager","error","contacts","createReducer","phonebookActions","state","find","filter","combineReducers","store","configureStore","reducer","phonebook","phonebookReducers","Section","title","children","className","s","section","CSSTransition","in","appear","classNames","fadeTransition","timeout","defaultProps","INITITAL_STATE","ContactFrom","handleChange","target","value","setState","handleSubmit","e","preventDefault","props","onAddContact","resetValue","this","contactUs","onSubmit","type","ContactFormInput","required","onChange","pattern","ContactFormButton","Component","MDTP","connect","onRemoveContact","toLowerCase","includes","TransitionGroup","component","map","key","fadeContact","onClick","Filter","onChangeFilter","fadeFilter","unmountOnExit","filterFormInput","placeholder","App","isShowAlert","persistedContacts","localStorage","getItem","onUpdateFromLS","JSON","parse","setItem","stringify","isShowFilter","length","isShowContactsList","ContactForm","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f00c579c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form-bg\":\"#f8f4e5\",\"form-shadow\":\"#ffa580\",\"contactUs\":\"ContactForm_contactUs__1ha5B\",\"ContactFormInput\":\"ContactForm_ContactFormInput__3Gp6Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__2S6oE\",\"section\":\"Section_section__Ap5Zy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts\":\"ContactList_contacts__1Ny0J\",\"contact\":\"ContactList_contact__3ZIyH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appear\":\"fade_appear__Z2Q96\",\"appearActive\":\"fade_appearActive__3CtpB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appear\":\"fade_appear__2vzB0\",\"appearActive\":\"fade_appearActive__2LlWC\",\"enter\":\"fade_enter__2dBpZ\",\"enterActive\":\"fade_enterActive__1bDem\",\"exit\":\"fade_exit__1RKKh\",\"exitActive\":\"fade_exitActive__1mH3q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterFormInput\":\"Filter_filterFormInput__3OudV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appear\":\"fadeFilter_appear__kqH8F\",\"appearActive\":\"fadeFilter_appearActive__2jfsG\",\"enter\":\"fadeFilter_enter__217mK\",\"enterActive\":\"fadeFilter_enterActive__3x2-P\",\"exit\":\"fadeFilter_exit__29fK5\",\"exitActive\":\"fadeFilter_exitActive__2p-RG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form-bg\":\"#f8f4e5\",\"form-shadow\":\"#ffa580\",\"form-primary-highlight\":\"#95a4ff\",\"form-secondary-highlight\":\"#ffc8ff\",\"font-size\":\"16px\",\"font-color\":\"#2A293E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form-bg\":\"#f8f4e5\",\"form-shadow\":\"#ffa580\",\"form-primary-highlight\":\"#95a4ff\",\"form-secondary-highlight\":\"#ffc8ff\",\"font-size\":\"16px\",\"font-color\":\"#2A293E\"};","const ADD = 'phonebook/add';\nconst REMOVE = 'phonebook/remove';\nconst CHANGE_FILTER = 'phonebook/changeFilter';\nconst UPDATE_FROM_LS = 'phonebook/updateFromLS';\nconst MUTE_ALERT = 'phophonebook/toggleAlert';\n\nexport default {\n  ADD,\n  REMOVE,\n  CHANGE_FILTER,\n  UPDATE_FROM_LS,\n  MUTE_ALERT,\n};\n","import { v4 as uuidv4 } from 'uuid';\nimport phonebookTypes from './phonebookTypes';\nimport { createAction } from '@reduxjs/toolkit';\n\nconst addContact = createAction(phonebookTypes.ADD, (name, number) => ({\n  payload: {\n    contact: { id: uuidv4(), name, number },\n  },\n}));\n\nconst updateFromLocaleStorage = createAction(phonebookTypes.UPDATE_FROM_LS);\n\nconst removeContact = createAction(phonebookTypes.REMOVE);\n\nconst changeFilter = createAction(phonebookTypes.CHANGE_FILTER);\n\nexport default {\n  addContact,\n  removeContact,\n  changeFilter,\n  updateFromLocaleStorage,\n};\n","import { NotificationManager } from 'react-notifications';\n\nimport 'react-notifications/lib/notifications.css';\n\nconst Alert = name => {\n  return NotificationManager.error(\n    `Contact \"${name}\" already exists!`,\n    'Error!',\n    3000,\n  );\n};\n\nexport default Alert;\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\n\nimport phonebookActions from './phonebookActions';\n\nimport Alert from '../../components/Alert';\n\nconst addContact = (state, { payload }) => {\n  if (state.find(contact => contact.name === payload.contact.name)) {\n    Alert(payload.contact.name);\n    return state;\n  }\n  return [...state, payload.contact];\n};\n\nconst contacts = createReducer([], {\n  [phonebookActions.addContact]: addContact,\n  [phonebookActions.removeContact]: (state, { payload }) =>\n    state.filter(contact => contact.id !== payload),\n  [phonebookActions.updateFromLocaleStorage]: (state, { payload }) => payload,\n});\n\nconst filter = createReducer('', {\n  [phonebookActions.changeFilter]: (state, { payload }) => payload,\n});\n\nexport default combineReducers({\n  contacts,\n  filter,\n});\n","import phonebookReducers from './phonebook/phonebookReducers';\nimport { configureStore } from '@reduxjs/toolkit';\n\nconst store = configureStore({\n  reducer: {\n    phonebook: phonebookReducers,\n  },\n});\n\nexport default store;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { CSSTransition } from 'react-transition-group';\n\nimport s from './Section.module.css';\nimport fadeTransition from './fade.module.css';\n\nconst Section = ({ title, children }) => {\n  return (\n    <section className={s.section}>\n      {title && (\n        <CSSTransition\n          in={true}\n          appear={true}\n          classNames={fadeTransition}\n          timeout={500}\n        >\n          <h2 className={s.title}>{title}</h2>\n        </CSSTransition>\n      )}\n      {children}\n    </section>\n  );\n};\n\nSection.defaultProps = {\n  title: '',\n};\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Section;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport phonebookActions from '../../redux/phonebook/phonebookActions';\n\nimport s from './ContactForm.module.css';\n\nconst INITITAL_STATE = {\n  name: '',\n  number: '',\n};\n\nclass ContactFrom extends Component {\n  state = INITITAL_STATE;\n\n  handleChange = ({ target }) => {\n    const { name, value } = target;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { name, number } = this.state;\n    this.props.onAddContact(name, number);\n    this.resetValue();\n  };\n\n  resetValue = () => {\n    this.setState(INITITAL_STATE);\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <form className={s.contactUs} onSubmit={this.handleSubmit}>\n        <label>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            className={s.ContactFormInput}\n            required\n            onChange={this.handleChange}\n          ></input>\n        </label>\n        <label>\n          Number\n          <input\n            type=\"tel\"\n            pattern=\"(\\+?\\d[- .]*){7,13}\"\n            name=\"number\"\n            required\n            className={s.ContactFormInput}\n            value={number}\n            onChange={this.handleChange}\n          ></input>\n        </label>\n        <button className={s.ContactFormButton} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nconst MDTP = {\n  onAddContact: phonebookActions.addContact,\n};\n\nexport default connect(null, MDTP)(ContactFrom);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport { connect } from 'react-redux';\n\nimport phonebookActions from '../../redux/phonebook/phonebookActions';\n\nimport s from './ContactList.module.css';\nimport fadeContact from './fade.module.css';\n\nconst ContactList = ({ contacts, onRemoveContact }) => {\n  return (\n    <TransitionGroup component=\"ul\" className={s.contacts}>\n      {contacts.map(({ id, name, number }) => (\n        <CSSTransition\n          key={id}\n          classNames={fadeContact}\n          timeout={250}\n          appear={true}\n        >\n          <li className={s.contact}>\n            <p>\n              <span> {name}:</span> <span>{number}</span>\n            </p>\n            <div>\n              <button type=\"button\" onClick={() => onRemoveContact(id)}>\n                Delete\n              </button>\n            </div>\n          </li>\n        </CSSTransition>\n      ))}\n    </TransitionGroup>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  onRemoveContact: PropTypes.func.isRequired,\n};\n\nconst MSTP = ({ phonebook }) => ({\n  contacts: phonebook.contacts.filter(contact =>\n    contact.name.toLowerCase().includes(phonebook.filter.toLowerCase()),\n  ),\n});\nconst MDTP = {\n  onRemoveContact: phonebookActions.removeContact,\n};\n\nexport default connect(MSTP, MDTP)(ContactList);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { CSSTransition } from 'react-transition-group';\n\nimport phonebookActions from '../../redux/phonebook/phonebookActions';\n\nimport s from './Filter.module.css';\nimport fadeFilter from './fadeFilter.module.css';\n\nconst Filter = ({ value, onChangeFilter }) => {\n  return (\n    <CSSTransition\n      in={true}\n      timeout={300}\n      classNames={fadeFilter}\n      unmountOnExit\n    >\n      <input\n        className={s.filterFormInput}\n        type=\"text\"\n        placeholder=\"Find contacts by name...\"\n        value={value}\n        onChange={({ target }) => onChangeFilter(target.value)}\n      />\n    </CSSTransition>\n  );\n};\n\nFilter.defaultProps = {\n  value: '',\n};\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChangeFilter: PropTypes.func.isRequired,\n};\n\nconst MSTP = ({ phonebook }) => ({\n  value: phonebook.filter,\n});\n\nconst MDTP = {\n  onChangeFilter: phonebookActions.changeFilter,\n};\n\nexport default connect(MSTP, MDTP)(Filter);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport phonebookActions from './redux/phonebook/phonebookActions';\n\nimport { NotificationContainer } from 'react-notifications';\nimport Section from './components/Section';\nimport ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter';\n\nclass App extends Component {\n  state = {\n    isShowAlert: false,\n  };\n\n  componentDidMount() {\n    const persistedContacts = localStorage.getItem('contacts');\n\n    if (persistedContacts) {\n      this.props.onUpdateFromLS(JSON.parse(persistedContacts));\n    }\n  }\n\n  componentDidUpdate({ contacts }) {\n    if (contacts !== this.props.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.props.contacts));\n    }\n  }\n\n  render() {\n    const isShowFilter = this.props.contacts.length > 1;\n    const isShowContactsList = this.props.contacts.length > 0;\n\n    return (\n      <>\n        <Section title=\"Phonebook\">\n          <ContactForm />\n        </Section>\n        <Section title=\"Contacts\">\n          {isShowFilter && <Filter />}\n          {isShowContactsList && <ContactList />}\n        </Section>\n        <NotificationContainer />\n      </>\n    );\n  }\n}\n\nconst MSTP = ({ phonebook }) => ({\n  contacts: phonebook.contacts,\n});\nconst MDTP = {\n  onUpdateFromLS: phonebookActions.updateFromLocaleStorage,\n};\n\nexport default connect(MSTP, MDTP)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport './css/basic.css';\nimport './css/button.module.css';\nimport './css/inpute.module.css';\n\nimport store from './redux/store';\n\nimport App from './App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}