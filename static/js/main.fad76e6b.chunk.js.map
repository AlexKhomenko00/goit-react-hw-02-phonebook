{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/Section/Section.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","css/button.module.css","css/inpute.module.css","components/Section/Section.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js"],"names":["module","exports","Section","title","children","className","s","section","defaultProps","ContactFrom","state","name","number","handleChange","target","value","setState","handleSubmit","e","preventDefault","props","onAddContact","resetValue","this","contactUs","onSubmit","type","ContactFormInput","required","onChange","pattern","ContactFormButton","Component","ContactList","contacts","onRemoveContact","map","id","contact","key","onClick","Filter","onChangeFilter","filterFormInput","placeholder","App","filter","changeFilter","getVisibleContacts","toLowerCase","includes","addContact","find","alert","uuidv4","prevState","removeContact","visibleContacts","ContactForm","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fad76e6b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form-bg\":\"#f8f4e5\",\"form-shadow\":\"#ffa580\",\"contactUs\":\"ContactForm_contactUs__1ha5B\",\"ContactFormInput\":\"ContactForm_ContactFormInput__3Gp6Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__2S6oE\",\"section\":\"Section_section__Ap5Zy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts\":\"ContactList_contacts__1Ny0J\",\"contact\":\"ContactList_contact__3ZIyH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterFormInput\":\"Filter_filterFormInput__3OudV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form-bg\":\"#f8f4e5\",\"form-shadow\":\"#ffa580\",\"form-primary-highlight\":\"#95a4ff\",\"form-secondary-highlight\":\"#ffc8ff\",\"font-size\":\"16px\",\"font-color\":\"#2A293E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form-bg\":\"#f8f4e5\",\"form-shadow\":\"#ffa580\",\"form-primary-highlight\":\"#95a4ff\",\"form-secondary-highlight\":\"#ffc8ff\",\"font-size\":\"16px\",\"font-color\":\"#2A293E\"};","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport s from './Section.module.css';\n\nconst Section = ({ title, children }) => {\n  return (\n    <section className={s.section}>\n      {title && <h2 className={s.title}>{title}</h2>}\n      {children}\n    </section>\n  );\n};\n\nSection.defaultProps = {\n  title: '',\n};\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Section;\n","import React, { Component } from 'react';\n\nimport s from './ContactForm.module.css';\n\nclass ContactFrom extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n  handleChange = ({ target }) => {\n    const { name, value } = target;\n    this.setState({\n      [name]: value,\n    });\n  };\n  handleSubmit = e => {\n    e.preventDefault();\n    const { name, number } = this.state;\n    this.props.onAddContact(name, number);\n    this.resetValue();\n  };\n  resetValue = () => {\n    this.setState({ name: '', number: '' });\n  };\n  render() {\n    const { name, number } = this.state;\n    return (\n      <form className={s.contactUs} onSubmit={this.handleSubmit}>\n        <label>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            className={s.ContactFormInput}\n            required\n            onChange={this.handleChange}\n          ></input>\n        </label>\n        <label>\n          Number\n          <input\n            type=\"tel\"\n            pattern=\"(\\+?\\d[- .]*){7,13}\"\n            name=\"number\"\n            required\n            className={s.ContactFormInput}\n            value={number}\n            onChange={this.handleChange}\n          ></input>\n        </label>\n        <button className={s.ContactFormButton} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\nexport default ContactFrom;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport s from './ContactList.module.css';\n\nconst ContactList = ({ contacts, onRemoveContact }) => {\n  return (\n    <ul className={s.contacts}>\n      {contacts.map(({ id, name, number }) => (\n        <li className={s.contact} key={id}>\n          <p>\n            <span> {name}:</span> <span>{number}</span>\n          </p>\n          <section>\n            <button type=\"button\" onClick={() => onRemoveContact(id)}>\n              Удалить\n            </button>\n          </section>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  onRemoveContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport s from './Filter.module.css';\n\nconst Filter = ({ value, onChangeFilter }) => {\n  return (\n    <>\n      <input\n        className={s.filterFormInput}\n        type=\"text\"\n        placeholder=\"Find contacts by name...\"\n        value={value}\n        onChange={e => onChangeFilter(e.target.value)}\n      ></input>\n    </>\n  );\n};\n\nFilter.defaultProps = {\n  value: '',\n};\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChangeFilter: PropTypes.func.isRequired,\n  // Немного глупый вопрос.\n  // В данном случаи функция является обязательной или нет?🧐\n};\n\nexport default Filter;\n","import React, { Component } from 'react';\n\nimport { v4 as uuidv4 } from 'uuid';\n\nimport Section from './components/Section';\nimport ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter';\n\nexport default class App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n  changeFilter = filter => {\n    this.setState({ filter });\n  };\n  getVisibleContacts = () => {\n    const { contacts, filter } = this.state;\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  };\n  addContact = (name, number) => {\n    if (this.state.contacts.find(contact => contact.name === name)) {\n      return alert(`${name} already in contacts!`);\n    }\n\n    const contact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n\n    this.setState(prevState => {\n      return {\n        contacts: [...prevState.contacts, contact],\n      };\n    });\n  };\n  removeContact = id => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== id),\n    }));\n  };\n  render() {\n    const { contacts, filter } = this.state;\n    const visibleContacts = this.getVisibleContacts();\n    return (\n      <>\n        <Section title=\"Phonebook\">\n          <ContactForm onAddContact={this.addContact} />\n        </Section>\n        <Section title=\"Contacts\">\n          {contacts.length > 1 && (\n            <Filter value={filter} onChangeFilter={this.changeFilter} />\n          )}\n          {contacts.length > 0 && (\n            <ContactList\n              contacts={visibleContacts}\n              onRemoveContact={this.removeContact}\n            />\n          )}\n        </Section>\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './basic.css';\nimport './css/button.module.css';\nimport './css/inpute.module.css';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}